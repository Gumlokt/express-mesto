{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","onClick","onCardClick","link","onCardDelete","type","aria-label","name","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","Footer","PopupWithForm","isOpen","onClose","onSubmit","title","children","btnTitle","EditAvatarPopup","avaRef","useRef","e","preventDefault","current","value","onUpdateAvatar","onChange","target","ref","defaultValue","placeholder","id","required","EditProfilePopup","useState","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","onAddCard","ImagePopup","appApi","config","this","_url","url","_headers","headers","res","err","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","data","method","body","JSON","stringify","liked","unsetLike","setLike","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","values","userData","initialCards","catch","console","log","message","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","newAvatar","setAvatar","updatedAvatar","newUserData","setUserInfo","updatedUserData","newCardData","addCard","addedCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ff1bb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2e17206c.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"Логотип\" className=\"header__logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n\r\n  return (\r\n    <ul className=\"element\">\r\n      <li className=\"element__item\">\r\n        <img onClick={handleClick} src={props.card.link} alt=\"Фото красивого места\" className=\"element__image\" />\r\n\r\n        {isOwn ? <button onClick={handleDeleteClick} className=\"element__btn-remove\" type=\"button\" aria-label=\"Удалить карточку\"></button> : ''}\r\n      </li>\r\n\r\n      <li className=\"element__item\">\r\n        <div className=\"element__body\">\r\n          <h2 className=\"element__title\">{props.card.name}</h2>\r\n\r\n          <div className=\"element__like-zone\">\r\n            <button onClick={handleLikeClick} className={`element__btn-like${isLiked ? ' element__btn-like_clicked' : ''}`} type=\"button\" aria-label=\"Поставить либо убрать лайк\"></button>\r\n            <p className=\"element__likes\">{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__data\">\r\n          <button onClick={props.onEditAvatar} className=\"profile__btn-edit-avatar\">\r\n            <img src={currentUser.avatar} alt=\"Аватарка (фото) владельца профиля\" className=\"profile__avatar\" />\r\n          </button>\r\n\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n\r\n            <button onClick={props.onEditProfile} className=\"profile__btn-edit\" type=\"button\" aria-label=\"Открыть окно редактирования профиля\"></button>\r\n\r\n            <p className=\"profile__about\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={props.onAddPlace} className=\"profile__btn-add\" type=\"button\" aria-label=\"Открыть окно добавления новой карточки\"></button>\r\n      </section>\r\n\r\n\r\n      <section className=\"elements\">{props.cards.map((item) => (\r\n        <Card\r\n          card={item}\r\n          onCardClick={props.onCardClick}\r\n          onCardLike={props.onCardLike}\r\n          onCardDelete={props.onCardDelete}\r\n          key={item._id}\r\n        />\r\n      ))}</section>\r\n    </main>\r\n  );\r\n}\r\n\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup${props.isOpen ? ' popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button onClick={props.onClose} className=\"popup__btn-close\" type=\"button\" aria-label=\"Закрыть окно\"></button>\r\n\r\n        <form onSubmit={props.onSubmit} className=\"form\" name={props.name}>\r\n          <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n          {props.children}\r\n\r\n          <button className=\"form__btn-save\" name=\"saveButton\">{props.btnTitle}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avaRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\r\n\r\n\r\n  function handleChangeAva(e) {\r\n    avaRef.current.value = e.target.value;\r\n  }\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (avaRef.current.value) {\r\n      props.onUpdateAvatar({\r\n        avatar: avaRef.current.value,\r\n      });\r\n    } else {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title = \"Обновить аватар\"\r\n      name = \"avatar\"\r\n      btnTitle = \"Сохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input onChange={handleChangeAva} ref={avaRef} type=\"url\" className=\"form__text-input\" name=\"avatar\" defaultValue=\"\" placeholder=\"Ссылка на аватарку\" id=\"avatar\" required />\r\n      <span className=\"form__input-error\" id=\"avatar-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, props.isOpen]);\r\n\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title = \"Редактировать профиль\"\r\n      name = \"profile\"\r\n      btnTitle = \"Сохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input onChange={handleChangeName} value={name || ''} type=\"text\" className=\"form__text-input\" name=\"name\" placeholder=\"Имя деятеля\" minLength=\"2\" maxLength=\"40\" id=\"name\" required />\r\n      <span className=\"form__input-error\" id=\"name-error\"></span>\r\n\r\n      <input onChange={handleChangeDescription} value={description || ''} type=\"text\" className=\"form__text-input\" name=\"about\" placeholder=\"Деятельность\" minLength=\"2\" maxLength=\"200\" id=\"about\" required />\r\n      <span className=\"form__input-error\" id=\"about-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [placeName, setPlaceName] = React.useState('');\r\n  const [placeLink, setPlaceLink] = React.useState('');\r\n\r\n\r\n  function handleChangeName(e) {\r\n    setPlaceName(e.target.value);\r\n  }\r\n\r\n  function handleChangeLink(e) {\r\n    setPlaceLink(e.target.value);\r\n  }\r\n\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddCard({\r\n      name: placeName,\r\n      link: placeLink\r\n    });\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if(!props.isOpen) {\r\n      setPlaceName('');\r\n      setPlaceLink('');\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title = \"Новое место\"\r\n      name = \"card\"\r\n      btnTitle = \"Создать\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input onChange={handleChangeName} value={placeName || ''} type=\"text\" className=\"form__text-input\" name=\"name\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" id=\"name\" required />\r\n      <span className=\"form__input-error\" id=\"name-error\"></span>\r\n\r\n      <input onChange={handleChangeLink} value={placeLink || ''} type=\"url\" className=\"form__text-input\" name=\"link\" placeholder=\"Ссылка на картинку\" id=\"link\" required />\r\n      <span className=\"form__input-error\" id=\"link-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\n\r\nexport default AddPlacePopup;\r\n","function ImagePopup(props) {\r\n  return (\r\n    <div className={`popup${props.isOpen ? ' popup_opened' : ''}`}>\r\n      <div className=\"popup__container popup__container_theme_dark\">\r\n        <button onClick={props.onClose} className=\"popup__btn-close\" type=\"button\" aria-label=\"Закрыть окно\"></button>\r\n\r\n        <figure className=\"popup__image-container\">\r\n          <img src={props.card.link} alt=\"Фото красивого места на весь экран\" className=\"popup__image\" />\r\n\r\n          <figcaption className=\"popup__image-title\">{props.card.name}</figcaption>\r\n        </figure>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n\r\n  _getResponseData(res, err) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}. ${err}`));\r\n  }\r\n\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Карточки не получены...');\r\n    });\r\n  }\r\n\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Новая карточка не добавлена...');\r\n    });\r\n  }\r\n\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Карточка не удалена...');\r\n    });\r\n  }\r\n\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Данные пользователя не получены...');\r\n    });\r\n  }\r\n\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Данные пользователя не обновлены...');\r\n    });\r\n  }\r\n\r\n\r\n  setAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Аватар пользователя не обновлён...');\r\n    });\r\n  }\r\n\r\n\r\n  setLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Лайк не поставлен...');\r\n    });\r\n  }\r\n\r\n\r\n  unsetLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._getResponseData(res, 'Лайк не удалён...');\r\n    });\r\n  }\r\n\r\n\r\n  changeLikeCardStatus(id, liked) {\r\n    if(liked) {\r\n      return this.unsetLike(id);\r\n    }\r\n\r\n    return this.setLike(id);\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Object with methods to send and request all data on the server side. */\r\nexport const appApi = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-16\",\r\n  headers: {\r\n\t\tauthorization: '7e8aae9c-bb81-4fe9-ac24-f206bc985678',\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\n\r\nimport { appApi } from '../utils/Api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([ //в Promise.all передаем массив промисов которые нужно выполнить\r\n      appApi.getUserInfo(),\r\n      appApi.getInitialCards()\r\n    ])\r\n    .then((values) => { //попадаем сюда когда массив промисов будут выполнены\r\n      const [ userData, initialCards ] = values;\r\n\r\n      setCurrentUser(userData);\r\n      setCards(initialCards);\r\n    })\r\n    .catch((err) => { //попадаем сюда если хотя бы один из промисов завершится ошибкой\r\n      console.log(err.message);\r\n    });\r\n  }, []);\r\n\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setImagePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setImagePopupOpen(false);\r\n  }\r\n\r\n  function handleUpdateAvatar(newAvatar) {\r\n    appApi.setAvatar(newAvatar).then((updatedAvatar) => {\r\n      setCurrentUser(updatedAvatar);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });;\r\n  }\r\n\r\n  function handleUpdateUser(newUserData) {\r\n    appApi.setUserInfo(newUserData).then((updatedUserData) => {\r\n      setCurrentUser(updatedUserData);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });;\r\n  }\r\n\r\n  function handleAddPlaceSubmi(newCardData) {\r\n    appApi.addCard(newCardData).then((addedCard) => {\r\n      setCards([addedCard, ...cards]);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });;\r\n  }\r\n\r\n\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    appApi.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });;\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    appApi.deleteCard(card._id).then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.filter((c) => c._id !== card._id);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n\r\n        <Main\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n          onEditAvatar = {handleEditAvatarClick}\r\n          onEditProfile = {handleEditProfileClick}\r\n          onAddPlace = {handleAddPlaceClick}\r\n          onCardClick = {handleCardClick}\r\n        />\r\n\r\n        <Footer />\r\n\r\n\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddCard={handleAddPlaceSubmi}\r\n        />\r\n\r\n\r\n        <PopupWithForm\r\n          title = \"Вы уверены?\"\r\n          name = \"confirmation\"\r\n          btnTitle = \"Да\"\r\n          isOpen={false}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n        <ImagePopup\r\n          card = {selectedCard}\r\n          isOpen = {isImagePopupOpen}\r\n          onClose = {closeAllPopups}\r\n        />\r\n      </CurrentUserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}